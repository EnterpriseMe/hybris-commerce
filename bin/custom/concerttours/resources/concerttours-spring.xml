<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ [y] hybris Platform
  ~ 
  ~ Copyright (c) 2000-2016 SAP SE
  ~ All rights reserved.
  ~ 
  ~ This software is the confidential and proprietary information of SAP 
  ~ Hybris ("Confidential Information"). You shall not disclose such 
  ~ Confidential Information and shall use it only in accordance with the 
  ~ terms of the license agreement you entered into with SAP Hybris.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!-- Scan and initialize all the beans in the package below  -->
    <context:component-scan base-package="concerttours"/>

    <!-- Core System Setup Beans -->
    <bean id="concerttoursSystemSetup" class="concerttours.setup.ConcerttoursSystemSetup">
        <!-- constructor arg injection example -->
        <constructor-arg ref="concerttoursService"/>
    </bean>
    <bean id="ConcerttoursCustomSetup" class="concerttours.setup.ConcerttoursCustomSetup" >
        <property name="importService" ref="importService"/>
    </bean>

    <bean id="concertDaysUntilAttributeHandler" class="concerttours.attributehandlers.ConcertDaysUntilAttributeHandler" />

    <!-- Facade Beans  -->
    <alias name = "defaultBandFacade" alias = "bandFacade" />
    <bean id = "defaultBandFacade" class ="concerttours.facades.impl.DefaultBandFacade" >
        <property name = "bandService" ref = "bandService" />
    </bean>
    <alias name = "defaultTourFacade" alias = "tourFacade" />
    <bean id = "defaultTourFacade" class ="concerttours.facades.impl.DefaultTourFacade" >
        <property name = "productService" ref = "productService" />
    </bean>

    <!--Service Beans -->
    <alias name = "defaultBandService" alias = "bandService" />
    <bean id = "defaultBandService" class = "concerttours.service.impl.DefaultBandService" >
        <property name = "bandDAO" ref = "bandDAO" />
    </bean>
    <bean id="concerttoursService" class="concerttours.service.impl.DefaultConcerttoursService">
        <!-- setter injection example -->
        <property name="modelService" ref="modelService"/>
        <property name="mediaService" ref="mediaService"/>
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
    </bean>

    <bean id="concerttourEventListener" class="concerttours.listeners.NewBandEventListener" parent="abstractEventListener">
        <property name="modelService" ref="modelService" />
    </bean>

    <bean id="bandAlbumSalesInterceptor" class="concerttours.interceptors.BandAlbumSalesInterceptor" />
    <bean id="BandInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="bandAlbumSalesInterceptor" />
        <property name="typeCode" value="Band" />
    </bean>
    <bean id="bandAlbumSalesEventListener" class="concerttours.events.BandAlbumSalesEventListener" parent="abstractEventListener" >
        <property name="modelService" ref="modelService" />
    </bean>
			
</beans>
